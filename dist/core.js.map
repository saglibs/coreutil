{"version":3,"sources":["node_modules/.npminstall/browser-pack/6.0.1/browser-pack/_prelude.js","core.js","mini.js","node_modules/lodash/_baseProperty.js","node_modules/lodash/_getLength.js","node_modules/lodash/core.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/isFunction.js","node_modules/lodash/isLength.js","node_modules/lodash/isObject.js","src/arraybuffer.js","src/cef_interactions.js","src/detect.js","src/event.js","src/iterator.js","src/math.js","src/object.js","src/raf.js","src/shims.js","src/stacktrace.js","src/storage.js","src/testers.js","src/urlutils.js","src/uuid.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_","Detect","StackTrace","ArrayBufferOp","CefInteractions","Maths","Objects","Storage","Tester","UrlUtils","Uuids","Events","Iterator","Shims","C","extend","noop","now","Date","root","jQuery","fn","slideLeftHide","speed","callback","this","animate","width","paddingLeft","paddingRight","marginLeft","marginRight","slideLeftShow","String","prototype","replaceAll","s1","s2","replace","RegExp","nonceStr","size","c","parseInt","Math","random","clearTimer","timer","clearInterval","./src/arraybuffer","./src/cef_interactions","./src/detect","./src/event","./src/iterator","./src/math","./src/object","./src/raf","./src/shims","./src/stacktrace","./src/storage","./src/testers","./src/urlutils","./src/uuid","lodash/core",2,"Mini","MAX_ARRAY_INDEX","pow","isArrayLike","collection","undefined","arrayEach","array","iteratee","result",3,"baseProperty","key","object",4,"getLength","./_baseProperty",5,"global","arrayConcat","other","arrayPush","copyArray","values","push","apply","baseExtremum","comparator","index","value","current","computed","baseFind","predicate","eachFunc","retKey","baseReduce","accumulator","initAccum","baseTimes","Array","baseValues","props","baseMap","checkGlobal","Object","compareAscending","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","escapeHtmlChar","chr","htmlEscapes","isHostObject","toString","isIndex","reIsUint","test","MAX_SAFE_INTEGER","iteratorToArray","iterator","data","next","done","lodash","LodashWrapper","chainAll","__wrapped__","__actions__","__chain__","assignInDefaults","objValue","srcValue","eq","objectProto","hasOwnProperty","assignValue","baseCreate","proto","isObject","objectCreate","baseDelay","func","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","baseEvery","baseEach","baseFilter","baseFlatten","depth","isStrict","isArrayLikeObject","isArray","isArguments","baseForOwn","baseFor","keys","baseFunctions","isFunction","baseIsEqual","customizer","bitmask","stack","isObjectLike","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objectToString","argsTag","objectTag","objIsObj","othIsObj","isSameTag","stacked","find","entry","isTypedArray","equalArrays","equalByTag","pop","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIteratee","identity","baseMatches","baseKeys","nativeKeys","baseKeysIn","source","UNORDERED_COMPARE_FLAG","basePick","reduce","baseSlice","start","end","baseSome","baseWrapperValue","actions","action","thisArg","copyObjectWith","newValue","createAssigner","assigner","rest","sources","createBaseEach","fromRight","iterable","createBaseFor","keysFunc","createCtorWrapper","Ctor","arguments","thisBinding","createPartialWrapper","partials","wrapper","argsIndex","argsLength","leftIndex","leftLength","isBind","BIND_FLAG","isPartial","isUnordered","arrLength","othLength","compared","arrValue","othValue","tag","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","indexKeys","isLength","isString","isPrototype","compact","Boolean","concat","castArray","flatten","flattenDeep","INFINITY","head","indexOf","fromIndex","nativeMax","isReflexive","last","slice","chain","tap","interceptor","thru","wrapperValue","every","guard","filter","forEach","map","some","sortBy","criteria","sort","before","toInteger","negate","once","otherArgs","clone","copyObject","gt","propertyIsEnumerable","isBoolean","isDate","isEmpty","splice","nonEnumShadows","isEqual","isFinite","nativeIsFinite","funcTag","genTag","type","isNaN","isNumber","isNull","isRegExp","isUndefined","lt","toArray","create","properties","assign","has","path","isProto","indexes","skipIndexes","keysIn","propsLength","defaultValue","escape","string","reHasUnescapedHtml","reUnescapedHtml","matches","mixin","options","methodNames","isFunc","methodName","noConflict","oldDash","uniqueId","prefix","id","idCounter","max","min","VERSION","PARTIAL_FLAG","&","<",">","\"","'","`","objectTypes","function","freeExports","nodeType","freeModule","moduleExports","freeGlobal","freeSelf","self","freeWindow","window","thisGlobal","Function","arrayProto","Reflect","enumerate","Symbol","Uint8Array","valueOf","bind","defer","delay","toNumber","Number","assignIn","assignInWith","srcIndex","defaults","pick","each","first","chainName","retUnwrapped","toJSON","define","amd",6,"./_getLength","./isFunction","./isLength",7,"./isObject",8,9,10,"A","readInt32","byteView","offset","littleEndian","a0","a1","a2","a3","readInt16","native","Int8Array","Int16Array","buffer","readFloat32","b0","b1","b2","b3","tb1","sign","exponent","mantissa","NaN","Infinity",11,"cefQuery","debug","console","log","callCef","req","persistent","onsuccess","onfailure","request","onSuccess","response","onFailure","err_code","err_msg","./detect",12,"isNodejs","eval","GLOBAL","navigator","userAgent","getIE","MSIEs","split","DNETs","msie","dnet","isIE","v","likeIE","isiPhone","isLollipop","p","isCanvasSupported","canvas","document","createElement","__cv","getContext","isWebGLSupported","__gl","language","toLowerCase","lodash/isArrayLike",13,"E","H","Event","addHandler","oElement","sEvent","fnHandler","toUpperCase","addEventListener","attachEvent","removeHandler","removeEventListener","detachEvent","EventDispatcher","listeners","attachListener","cb","uuid","fastUuid","fire","blocked","removeListener","listener","merge","clearListener","./iterator","./uuid",14,"I","template","resultWrapper","setTemplate","obj","stackStack","ret","val","list","printStackTrace","until","callable","eachKey","eachIndex","step","rs","ci","ele","../core",15,"Ms","sum","hypot","sqrt","arg","log2","number","varInRange","v0","v1","pointInRect","p0","p1","mx","degToRad","degree","PI","radToDeg","rad","standardizeDegree","floor","standardizeRad","rectToPolar","coor","absTheta","atan2","abs","signal","polarToRect","cA","cos","sA","sin","latToMeter","delta","lngToMeterAtLat","lat","meterToLat","meter","meterToLngAtLat","distOnEarth","acos","../mini","./stacktrace",16,"O","strContains","str","sub","strContainsIgnoreCase","parseJson","json","JSON","parse","decodeURI","cloneByParse","stringify",17,"requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame",18,"S","D","addProperty","defineProperty","instance","k","descriptor","ienumerable","enumerable","ienumerables","__userDefined__","createObject","F","__defineGetter__","get","x","configurable","set","defPropException","method","methods",19,"error","getStackTrace","title","callstack","shift","unshift","join","DefaultNestedTitle","DefaultTitle","errlog","d","stackTrace",20,"setCookie","days","date","setTime","getTime","cookie","toUTCString","getCookie","regex","splits","match","setItemFallback","__sessionStorage","getItemFallback","removeItemFallback","setItem","getItem","removeItem","sessionStorage","secAddItem",21,"profile","profileEnd","repeat","times","testTimes","profileTimes",22,"location","QueryString","item","svalue","search","Request","getUrlByParams","server","params","paramUrl","param","tr","substr","add","encodeURIComponent",23,"len","radix","chars","rnd"],"mappings":"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","file":"core.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var _ = require('lodash/core');\r\n\r\nrequire('./src/raf');\r\n\r\nvar Detect = require('./src/detect');\r\nvar StackTrace = require('./src/stacktrace');\r\nvar ArrayBufferOp = require('./src/arraybuffer');\r\nvar CefInteractions = require('./src/cef_interactions');\r\nvar Maths = require('./src/math');\r\nvar Objects = require('./src/object');\r\nvar Storage = require('./src/storage');\r\nvar Tester = require('./src/testers');\r\nvar UrlUtils = require('./src/urlutils');\r\nvar Uuids = require('./src/uuid');\r\nvar Events = require('./src/event');\r\nvar Iterator = require('./src/iterator');\r\nvar Shims = require('./src/shims');\r\n//TODO: resultset\r\n\r\nvar C = {};\r\n\r\n_.extend(C, _);\r\n_.extend(C, Detect);\r\n_.extend(C, StackTrace);\r\n_.extend(C, ArrayBufferOp);\r\n_.extend(C, CefInteractions);\r\n_.extend(C, Maths);\r\n_.extend(C, Objects);\r\n_.extend(C, Storage);\r\n_.extend(C, Tester);\r\n_.extend(C, UrlUtils);\r\n_.extend(C, Uuids);\r\n_.extend(C, Events);\r\n_.extend(C, Iterator);\r\n_.extend(C, Shims);\r\n\r\nC.noop = function() {\r\n    return function() {};\r\n};\r\n\r\nC.now = Date.now;\r\n\r\n/*\r\n * jQuery Shim\r\n */\r\n//noinspection JSUnresolvedVariable\r\nif (C.root.jQuery) {\r\n    //noinspection JSUnresolvedVariable,JSUnusedGlobalSymbols\r\n    C.root.jQuery.fn.extend({\r\n        slideLeftHide: function( speed, callback ) {\r\n            //noinspection JSUnresolvedFunction\r\n            this.animate( {\r\n                width: \"hide\",\r\n                paddingLeft: \"hide\",\r\n                paddingRight: \"hide\",\r\n                marginLeft: \"hide\",\r\n                marginRight: \"hide\"\r\n            }, speed, callback);\r\n        },\r\n        slideLeftShow: function( speed, callback ) {\r\n            //noinspection JSUnresolvedFunction\r\n            this.animate( {\r\n                width: \"show\",\r\n                paddingLeft: \"show\",\r\n                paddingRight: \"show\",\r\n                marginLeft: \"show\",\r\n                marginRight: \"show\"\r\n            }, speed, callback);\r\n        }\r\n    });\r\n}\r\n\r\n//noinspection JSUnusedGlobalSymbols\r\nC.extend(String.prototype, {\r\n    replaceAll: function(s1,s2){\r\n        return this.replace(new RegExp(s1,\"gm\"),s2);\r\n    }\r\n});\r\n\r\n/**\r\n * Produce a random string in a fixed size. Output size is 16 by default.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} [size] length of target string\r\n * @returns {string}\r\n */\r\nC.nonceStr = function(size) {\r\n    var s = \"\";\r\n    var c = \"0123456789qwertyuiopasdfghjklzxcvbnm\";\r\n    for (var i = 0; i < size || 16; i++) {\r\n        s += c[parseInt(36 * Math.random())];\r\n    }\r\n    return s;\r\n};\r\n\r\n/**\r\n * Clear timer\r\n *\r\n * @static\r\n * @memberof H\r\n * @param timer timer to clear\r\n */\r\nC.clearTimer = function(timer) {\r\n    if (timer) {\r\n        clearInterval(timer);\r\n    }\r\n};\r\n\r\nmodule.exports = C;","/*\r\n * MiniCore module\r\n *\r\n * Provides a simplest set of some basic utils.\r\n * Should be used internally.\r\n */\r\n\r\nvar Mini = {};\r\n\r\nvar MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\r\nvar isArrayLike = function(collection) {\r\n    if (collection === null || collection === undefined) return 0;\r\n    var length = collection['length'];\r\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\r\n};\r\n\r\n/**\r\n * Check if something is array-like\r\n *\r\n * @param collection anything to check\r\n * @return {boolean}\r\n * @type {isArrayLike}\r\n */\r\nMini.isArrayLike = isArrayLike;\r\n\r\n/**\r\n * Iterates on an array. Fast and should not be used on objects.\r\n *\r\n * @param {Array} array\r\n * @param {Function} iteratee\r\n * @returns {Array} result map\r\n */\r\nMini.arrayEach = function(array, iteratee) {\r\n    var length = array.length;\r\n\r\n    if (isArrayLike(array) && length > 0) {\r\n        var result = [];\r\n        var n = length;\r\n        length++;\r\n        while (--length) {\r\n            result[n - length] = iteratee(array[n - length]);\r\n        }\r\n        return result;\r\n    }\r\n};\r\n\r\nmodule.exports = Mini;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a\n * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n * Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n","/**\n * @license\n * lodash 4.7.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.7.0';\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      PARTIAL_FLAG = 32;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"'`]/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n    ? exports\n    : undefined;\n\n  /** Detect free variable `module`. */\n  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n    ? module\n    : undefined;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = (freeModule && freeModule.exports === freeExports)\n    ? freeExports\n    : undefined;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n  /** Detect free variable `window`. */\n  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal ||\n    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n      freeSelf || thisGlobal || Function('return this')();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new array concatenating `array` with `other`.\n   *\n   * @private\n   * @param {Array} array The first array to concatenate.\n   * @param {Array} other The second array to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   */\n  function arrayConcat(array, other) {\n    return arrayPush(copyArray(array), values);\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? current === current\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.find` and `_.findKey`, without\n   * support for iteratee shorthands, which iterates over `collection` using\n   * `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @param {boolean} [retKey] Specify returning the key of the found element\n   *  instead of the element itself.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFind(collection, predicate, eachFunc, retKey) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = retKey ? key : value;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return value > -1 && value % 1 == 0 && value < length;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var objectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var Reflect = root.Reflect,\n      Symbol = root.Symbol,\n      Uint8Array = root.Uint8Array,\n      enumerate = Reflect ? Reflect.enumerate : undefined,\n      objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = Object.keys,\n      nativeMax = Math.max;\n\n  /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n  var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array of at least two hundred\n   * elements and any iteratees accept only one argument. The heuristic for\n   * whether a section qualifies for shortcut fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n   * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n   * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n   * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n   * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n   * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n   * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`, `isBuffer`,\n   * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`,\n   * `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`, `isMatch`,\n   * `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,\n   * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,\n   * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,\n   * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,\n   * `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`, `min`, `minBy`, `multiply`,\n   * `noConflict`, `noop`, `now`, `pad`, `padEnd`, `padStart`, `parseInt`,\n   * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,\n   * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n   * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,\n   * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toInteger`,\n   * `toJSON`, `toLength`, `toLower`, `toNumber`, `toSafeInteger`, `toString`,\n   * `toUpper`, `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`,\n   * `uniqueId`, `upperCase`, `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Used by `_.defaults` to customize its `_.assignIn` use.\n   *\n   * @private\n   * @param {*} objValue The destination value.\n   * @param {*} srcValue The source value.\n   * @param {string} key The key of the property to assign.\n   * @param {Object} object The parent object of `objValue`.\n   * @returns {*} Returns the value to assign.\n   */\n  function assignInDefaults(objValue, srcValue, key, object) {\n    if (objValue === undefined ||\n        (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n      return srcValue;\n    }\n    return objValue;\n  }\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      object[key] = value;\n    }\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  function baseCreate(proto) {\n    return isObject(proto) ? objectCreate(proto) : {};\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts an array\n   * of `func` arguments.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Object} args The arguments to provide to `func`.\n   * @returns {number} Returns the timer id.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, isStrict, result) {\n    result || (result = []);\n\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && isArrayLikeObject(value) &&\n          (isStrict || isArray(value) || isArguments(value))) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` invoking `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the new array of filtered property names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {boolean} [bitmask] The bitmask of comparison flags.\n   *  The bitmask may be composed of the following flags:\n   *     1 - Unordered comparison\n   *     2 - Partial comparison\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, customizer, bitmask, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = arrayTag,\n        othTag = arrayTag;\n\n    if (!objIsArr) {\n      objTag = objectToString.call(object);\n      objTag = objTag == argsTag ? objectTag : objTag;\n    }\n    if (!othIsArr) {\n      othTag = objectToString.call(other);\n      othTag = othTag == argsTag ? objectTag : othTag;\n    }\n    var objIsObj = objTag == objectTag && !isHostObject(object),\n        othIsObj = othTag == objectTag && !isHostObject(other),\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var stacked = find(stack, function(entry) {\n      return entry[0] === object;\n    });\n    if (stacked && stacked[1]) {\n      return stacked[1] == other;\n    }\n    stack.push([object, other]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr || isTypedArray(object))\n        ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n        : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.keys` which doesn't skip the constructor\n   * property of prototypes or treat sparse arrays as dense.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function baseKeys(object) {\n    return nativeKeys(Object(object));\n  }\n\n  /**\n   * The base implementation of `_.keysIn` which doesn't skip the constructor\n   * property of prototypes or treat sparse arrays as dense.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function baseKeysIn(object) {\n    object = object == null ? object : Object(object);\n\n    var result = [];\n    for (var key in object) {\n      result.push(key);\n    }\n    return result;\n  }\n\n  // Fallback for IE < 9 with es6-shim.\n  if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n    baseKeysIn = function(object) {\n      return iteratorToArray(enumerate(object));\n    };\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new function.\n   */\n  function baseMatches(source) {\n    var props = keys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} props The property identifiers to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @returns {Object} Returns `object`.\n   */\n  var copyObject = copyObjectWith;\n\n  /**\n   * This function is like `copyObject` except that it accepts a function to\n   * customize copied values.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObjectWith(source, props, object, customizer) {\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : source[key];\n\n      assignValue(object, key, newValue);\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return rest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = typeof customizer == 'function'\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtorWrapper(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors.\n      // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the optional `this`\n   * binding of `thisArg` and the `partials` prepended to those provided to\n   * the wrapper.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n   *  for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartialWrapper(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & BIND_FLAG,\n        Ctor = createCtorWrapper(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n    var index = -1,\n        isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n        isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var result = true;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (isUnordered) {\n        if (!baseSome(other, function(othValue) {\n              return arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack);\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, customizer, bitmask, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n        // Coerce dates and booleans to numbers, dates to milliseconds and\n        // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n        // not equal.\n        return +object == +other;\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case numberTag:\n        // Treat `NaN` vs. `NaN` as equal.\n        return (object != +object) ? other != +other : object == +other;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n    var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the \"length\" property value of `object`.\n   *\n   * **Note:** This function is used to avoid a\n   * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n   * Safari on at least iOS 8.1-8.3 ARM64.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {*} Returns the \"length\" value.\n   */\n  var getLength = baseProperty('length');\n\n  /**\n   * Creates an array of index keys for `object` values of arrays,\n   * `arguments` objects, and strings, otherwise `null` is returned.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array|null} Returns index keys, else `null`.\n   */\n  function indexKeys(object) {\n    var length = object ? object.length : undefined;\n    if (isLength(length) &&\n        (isArray(object) || isString(object) || isArguments(object))) {\n      return baseTimes(length, String);\n    }\n    return null;\n  }\n\n  /**\n   * Checks if `value` is likely a prototype object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n   */\n  function isPrototype(value) {\n    var Ctor = value && value.constructor,\n        proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n    return value === proto;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length,\n        array = castArray(arguments[0]);\n\n    if (length < 2) {\n      return length ? copyArray(array) : [];\n    }\n    var args = Array(length - 1);\n    while (length--) {\n      args[length - 1] = arguments[length];\n    }\n    return arrayConcat(array, baseFlatten(args, 1));\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array ? array.length : 0;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array ? array.length : 0;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return array ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n   * from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array ? array.length : 0;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array ? array.length : 0;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array ? array.length : 0;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Array|Function|Object|string} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Array|Function|Object|string} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to search.\n   * @param {Array|Function|Object|string} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  function find(collection, predicate) {\n    return baseFind(collection, baseIteratee(predicate), baseEach);\n  }\n\n  /**\n   * Iterates over elements of `collection` invoking `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @example\n   *\n   * _([1, 2]).forEach(function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` through\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,\n   * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,\n   * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,\n   * and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Array|Function|Object|string} [iteratee=_.identity]\n   *  The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` through `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : keys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Array|Function|Object|string} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection through each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n   *  [iteratees=[_.identity]] The iteratees to sort by, specified individually\n   *  or in arrays.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, function(o) { return o.user; });\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   *\n   * _.sortBy(users, 'user', function(o) {\n   *   return Math.floor(o.age / 10);\n   * });\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => allows adding up to 4 contacts to the list\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and prepends any additional `_.bind` arguments to those provided to the\n   * bound function.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var greet = function(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * };\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = rest(function(func, thisArg, partials) {\n    return createPartialWrapper(func, BIND_FLAG | PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one or more milliseconds.\n   */\n  var defer = rest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = rest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // `initialize` invokes `createApplication` once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of the\n   * created function and arguments from `start` and beyond provided as\n   * an array.\n   *\n   * **Note:** This method is based on the\n   * [rest parameter](https://mdn.io/rest_parameters).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Function\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var say = _.rest(function(what, names) {\n   *   return what + ' ' + _.initial(names).join(', ') +\n   *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n   * });\n   *\n   * say('hello', 'fred', 'barney', 'pebbles');\n   * // => 'hello fred, barney, & pebbles'\n   */\n  function rest(func, start) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      var otherArgs = Array(start + 1);\n      index = -1;\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = array;\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Casts `value` as an array if it's not one.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.4.0\n   * @category Lang\n   * @param {*} value The value to inspect.\n   * @returns {Array} Returns the cast array.\n   * @example\n   *\n   * _.castArray(1);\n   * // => [1]\n   *\n   * _.castArray({ 'a': 1 });\n   * // => [{ 'a': 1 }]\n   *\n   * _.castArray('abc');\n   * // => ['abc']\n   *\n   * _.castArray(null);\n   * // => [null]\n   *\n   * _.castArray(undefined);\n   * // => [undefined]\n   *\n   * _.castArray();\n   * // => []\n   *\n   * var array = [1, 2, 3];\n   * console.log(_.castArray(array) === array);\n   * // => true\n   */\n  function castArray() {\n    if (!arguments.length) {\n      return [];\n    }\n    var value = arguments[0];\n    return isArray(value) ? value : [value];\n  }\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, keys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'user': 'fred' };\n   * var other = { 'user': 'fred' };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is greater than `other`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.9.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   * @example\n   *\n   * _.gt(3, 1);\n   * // => true\n   *\n   * _.gt(3, 3);\n   * // => false\n   *\n   * _.gt(1, 3);\n   * // => false\n   */\n  function gt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n    return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n      (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n  }\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @type {Function}\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified,\n   *  else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(getLength(value)) && !isFunction(value);\n  }\n\n  /**\n   * This method is like `_.isArrayLike` except that it also checks if `value`\n   * is an object.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array-like object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArrayLikeObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLikeObject(document.body.children);\n   * // => true\n   *\n   * _.isArrayLikeObject('abc');\n   * // => false\n   *\n   * _.isArrayLikeObject(_.noop);\n   * // => false\n   */\n  function isArrayLikeObject(value) {\n    return isObjectLike(value) && isArrayLike(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified,\n   *  else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && objectToString.call(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified,\n   *  else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  function isDate(value) {\n    return isObjectLike(value) && objectToString.call(value) == dateTag;\n  }\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    for (var key in value) {\n      if (hasOwnProperty.call(value, key)) {\n        return false;\n      }\n    }\n    return !(nonEnumShadows && keys(value).length);\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are **not** supported.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent,\n   *  else `false`.\n   * @example\n   *\n   * var object = { 'user': 'fred' };\n   * var other = { 'user': 'fred' };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number,\n   *  else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MAX_VALUE);\n   * // => true\n   *\n   * _.isFinite(3.14);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified,\n   *  else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 8 which returns 'object' for typed array and weak map constructors,\n    // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n    var tag = isObject(value) ? objectToString.call(value) : '';\n    return tag == funcTag || tag == genTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This function is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length,\n   *  else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return !!value && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is not the same as\n   * [`isNaN`](https://es5.github.io/#x15.1.2.4) which returns `true` for\n   * `undefined` and other non-numeric values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified,\n   *  else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && objectToString.call(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified,\n   *  else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  function isRegExp(value) {\n    return isObject(value) && objectToString.call(value) == regexpTag;\n  }\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified,\n   *  else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Checks if `value` is less than `other`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.9.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   * @example\n   *\n   * _.lt(1, 3);\n   * // => true\n   *\n   * _.lt(3, 3);\n   * // => false\n   *\n   * _.lt(3, 1);\n   * // => false\n   */\n  function lt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This function is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3);\n   * // => 3\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3');\n   * // => 3\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Foo() {\n   *   this.c = 3;\n   * }\n   *\n   * function Bar() {\n   *   this.e = 5;\n   * }\n   *\n   * Foo.prototype.d = 4;\n   * Bar.prototype.f = 6;\n   *\n   * _.assign({ 'a': 1 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3, 'e': 5 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, keys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Foo() {\n   *   this.b = 2;\n   * }\n   *\n   * function Bar() {\n   *   this.d = 4;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   * Bar.prototype.e = 5;\n   *\n   * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, keysIn(source), object);\n  });\n\n  /**\n   * This method is like `_.assignIn` except that it accepts `customizer`\n   * which is invoked to produce the assigned values. If `customizer` returns\n   * `undefined` assignment is handled by the method instead. The `customizer`\n   * is invoked with five arguments: (objValue, srcValue, key, object, source).\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extendWith\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} sources The source objects.\n   * @param {Function} [customizer] The function to customize assigned values.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function customizer(objValue, srcValue) {\n   *   return _.isUndefined(objValue) ? srcValue : objValue;\n   * }\n   *\n   * var defaults = _.partialRight(_.assignInWith, customizer);\n   *\n   * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n    copyObjectWith(source, keysIn(source), object, customizer);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties ? assign(result, properties) : result;\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n   * // => { 'user': 'barney', 'age': 36 }\n   */\n  var defaults = rest(function(args) {\n    args.push(undefined, assignInDefaults);\n    return assignInWith.apply(undefined, args);\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': { 'c': 3 } } };\n   * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b.c');\n   * // => true\n   *\n   * _.has(object, ['a', 'b', 'c']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  function keys(object) {\n    var isProto = isPrototype(object);\n    if (!(isProto || isArrayLike(object))) {\n      return baseKeys(object);\n    }\n    var indexes = indexKeys(object),\n        skipIndexes = !!indexes,\n        result = indexes || [],\n        length = result.length;\n\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key) &&\n          !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n          !(isProto && key == 'constructor')) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  function keysIn(object) {\n    var index = -1,\n        isProto = isPrototype(object),\n        props = baseKeysIn(object),\n        propsLength = props.length,\n        indexes = indexKeys(object),\n        skipIndexes = !!indexes,\n        result = indexes || [],\n        length = result.length;\n\n    while (++index < propsLength) {\n      var key = props[index];\n      if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n          !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [props] The property identifiers to pick,\n   *  specified individually or in arrays.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = rest(function(object, props) {\n    return object == null ? {} : basePick(object, baseFlatten(props, 1));\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object ? baseValues(object, keys(object)) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n   * their corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * Backticks are escaped because in IE < 9, they can break out of\n   * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n   * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n   * [#133](https://html5sec.org/#133) of the\n   * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument given to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * _.identity(object) === object;\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name the created function returns the\n   * property value for a given element. If `func` is an array or object the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`. The created function is equivalent to\n   * `_.isMatch` with a `source` partially applied.\n   *\n   * **Note:** This method supports comparing the same values as `_.isEqual`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n   * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = (isObject(options) && 'chain' in options) ? options.chain : true,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * A no-operation function that returns `undefined` regardless of the\n   * arguments it receives.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * _.noop(object) === undefined;\n   * // => true\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, gt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, lt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Expose lodash on the free variable `window` or `self` when available. This\n  // prevents errors in cases where lodash is loaded by a script tag in the presence\n  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.\n  (freeWindow || freeSelf || {})._ = lodash;\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js.\n    if (moduleExports) {\n      (freeModule.exports = lodash)._ = lodash;\n    }\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n","var getLength = require('./_getLength'),\n    isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value)) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length,\n *  else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var A = {};\r\n\r\n/**\r\n * Reads a 32bit integer from the specific offset in a Uint8Array (big or little endian)\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Uint8Array} byteView uint8array object\r\n * @param {Number} [offset] byte offset\r\n * @param {boolean} [littleEndian] flag of is or is not little endian\r\n * @returns {Number}\r\n * @example\r\n *\r\n * H.readInt32(uint8, 0, 1)\r\n */\r\nA.readInt32 = function(byteView, offset, littleEndian) {\r\n    var a0, a1, a2, a3;\r\n    a0 = byteView[offset];\r\n    a1 = byteView[offset + 1];\r\n    a2 = byteView[offset + 2];\r\n    a3 = byteView[offset + 3];\r\n    if (littleEndian) {\r\n        a3 = (a3 << 24) >>> 0;\r\n        a2 = a2 << 16;\r\n        a1 = a1 << 8;\r\n    } else {\r\n        a0 = (a0 << 24) >>> 0;\r\n        a1 = a1 << 16;\r\n        a2 = a2 << 8;\r\n    }\r\n    return a3 + a2 + a1 + a0;\r\n};\r\n\r\n/**\r\n * Reads a 16bit integer from the specific offset in a Uint8Array (big or little endian)\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Uint8Array} byteView uint8array object\r\n * @param {Number} [offset] byte offset\r\n * @param {boolean} [littleEndian] flag of is or is not little endian\r\n * @returns {Number}\r\n * @example\r\n *\r\n * H.readInt16(uint8, 0, 1)\r\n */\r\nA.readInt16 = function(byteView, offset, littleEndian) {\r\n    var a0, a1;\r\n    a0 = byteView[offset];\r\n    a1 = byteView[offset + 1];\r\n    if (littleEndian) {\r\n        a1 = a1 << 8;\r\n    } else {\r\n        a0 = a0 << 8\r\n    }\r\n    return a0 + a1;\r\n};\r\n\r\nvar native = new Int8Array(new Int16Array([1]).buffer)[0] == 1;\r\n/**\r\n * Reads a 32bit float from the specific offset in a Uint8Array (big or little endian)\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Uint8Array} byteView uint8array object\r\n * @param {Number} [offset] byte offset\r\n * @param {boolean} [littleEndian] flag of is or is not little endian\r\n * @returns {Number}\r\n * @example\r\n *\r\n * H.readFloat32(uint8, 0, 1)\r\n */\r\nA.readFloat32 = function(byteView, offset, littleEndian) {\r\n    var b0, b1, b2, b3, tb1;\r\n    var sign, exponent, mantissa;\r\n    if (littleEndian === undefined) littleEndian = native;\r\n\r\n    if (littleEndian) {\r\n        b0 = byteView[offset + 3];\r\n        b1 = byteView[offset + 2];\r\n        b2 = byteView[offset + 1];\r\n        b3 = byteView[offset];\r\n    } else {\r\n        b0 = byteView[offset];\r\n        b1 = byteView[offset + 1];\r\n        b2 = byteView[offset + 2];\r\n        b3 = byteView[offset + 3];\r\n    }\r\n\r\n    //to prevent gc\r\n    tb1 = b0 >> 7;\r\n    sign = 1 - (2 * tb1);\r\n\r\n    b0 = b0 << 1;\r\n    tb1 = b1 >> 7;\r\n    b0 = (b0 & 0xff);\r\n    exponent = (b0 | tb1) - 127;\r\n\r\n    tb1 = b1 & 0x7f;\r\n    tb1 = tb1 << 16;\r\n    b2 = b2 << 8;\r\n    mantissa = tb1 | b2 | b3;\r\n\r\n    if (exponent === 128) {\r\n        if (mantissa !== 0) {\r\n            return NaN;\r\n        } else {\r\n            return sign * Infinity;\r\n        }\r\n    }\r\n\r\n    if (exponent === -127) { // Denormalized\r\n        return sign * mantissa * Math.pow(2, -126 - 23);\r\n    }\r\n\r\n    return sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\r\n};\r\n\r\nmodule.exports = A;","var C = require('./detect');\r\n\r\n/*\r\n * Cef Interactions\r\n */\r\n//noinspection JSUnresolvedVariable\r\nvar cefQuery = C.root.cefQuery || function() {\r\n        if (this.debug) console.log(arguments[0]);\r\n    };\r\n\r\n/**\r\n * Call Cef\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {string} [req] request string\r\n * @param {boolean} [persistent]\r\n * @param {Function} [onsuccess] success callback\r\n * @param {Function} [onfailure] failed callback\r\n * @returns {undefined}\r\n * @example\r\n *\r\n * H.callCef(\"selectItem:1\", false, H.noop(), H.noop())\r\n */\r\nC.callCef = function(req, persistent, onsuccess, onfailure) {\r\n    return cefQuery({\r\n        request: req || \"\",\r\n        persistent: !!persistent,\r\n        onSuccess: onsuccess || function(response) {},\r\n        onFailure: onfailure || function(err_code, err_msg) {}\r\n    })\r\n};\r\n\r\nmodule.exports = C;","/*\r\n * Env Detection Module\r\n */\r\n\r\nvar C = {};\r\n\r\nC.isArrayLike = require('lodash/isArrayLike');\r\n\r\n/**\r\n * Flag of is in node.js environment or not.\r\n *\r\n * @static\r\n * @memberof H\r\n * @type {boolean}\r\n */\r\nC.isNodejs = 'object' === typeof eval('process') && Object.prototype.toString.call(eval('process')) === '[object process]';\r\n\r\nC.root = {};\r\n\r\ntry {\r\n    //noinspection JSUnresolvedVariable\r\n    C.root = GLOBAL;\r\n} catch (e) {\r\n    C.root = window;\r\n}\r\n\r\n//noinspection JSUnresolvedVariable\r\n// C.root = C.isNodejs ? GLOBAL : window;\r\n\r\n//noinspection JSUnresolvedVariable\r\nvar root = C.root;\r\n\r\n//noinspection JSUnresolvedVariable\r\nroot.navigator = root.navigator || {userAgent: \"\"};\r\n\r\nC.root = root;\r\n\r\n/**\r\n * Get IE version.\r\n * Returns 0 in non-IE environment.\r\n *\r\n * @static\r\n * @memberof H\r\n * @returns {number}\r\n */\r\nC.getIE = function() {\r\n    var MSIEs = navigator.userAgent.split('MSIE ')[1] || \"0\";\r\n    var DNETs = navigator.userAgent.split('rv:')[1] || \"0\";\r\n\r\n    MSIEs = MSIEs.split(\".\")[0];\r\n    DNETs = DNETs.split(\".\")[0];\r\n\r\n    var msie = ~~MSIEs;\r\n    var dnet = ~~DNETs;\r\n\r\n    if (msie != 0) {\r\n        return msie;\r\n    }\r\n    if (dnet != 0) {\r\n        return dnet;\r\n    }\r\n\r\n    return 0;\r\n};\r\n\r\n/**\r\n * Check if is in IE or is in a specified version of IE.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} [v] version to check\r\n * @returns {boolean}\r\n */\r\nC.isIE = function(v) {\r\n    if (v !== undefined) {\r\n        return C.getIE() == v;\r\n    } else {\r\n        return C.getIE() !== 0;\r\n    }\r\n};\r\n\r\n/**\r\n * Flag of is in IE.\r\n *\r\n * @static\r\n * @memberof H\r\n * @type {boolean}\r\n */\r\nC.likeIE = !!C.getIE();\r\n\r\n/**\r\n * Flag of is in browsers on iPhone.\r\n *\r\n * @static\r\n * @memberof H\r\n * @type {boolean}\r\n */\r\nC.isiPhone = navigator.userAgent.indexOf('iPhone') !== -1;\r\n\r\n/**\r\n * Flag of is in browsers of Lollipop systems\r\n * @type {boolean}\r\n */\r\nC.isLollipop = navigator.userAgent.indexOf('Android 5.') !== -1;\r\n\r\n//root.hasOwnProperty shims\r\nif (!root.hasOwnProperty) {\r\n    root.hasOwnProperty = function(p) {\r\n        //Note: in IE<9, p cannot be a function (for window)\r\n        return !!root[p];\r\n    };\r\n}\r\n\r\n/**\r\n * Check if canvas drawing is supported in current browser.\r\n *\r\n * @static\r\n * @memberof H\r\n * @returns {boolean}\r\n */\r\nC.isCanvasSupported = function () {\r\n    if (C.isNodejs) return false;\r\n    var canvas = document.createElement('canvas');\r\n    return root.hasOwnProperty(\"__cv\") ? root.__cv : root.__cv = !!(canvas.getContext && canvas.getContext('2d'));\r\n};\r\n\r\n/**\r\n * Check if webgl drawing is supported in current browser.\r\n *\r\n * @static\r\n * @memberof H\r\n * @returns {boolean}\r\n */\r\nC.isWebGLSupported = function () {\r\n    if (C.isNodejs) return false;\r\n    var canvas = document.createElement('canvas');\r\n    return root.hasOwnProperty(\"__gl\") ? root.__gl : root.__gl = !!(root['WebGLRenderingContext'] && canvas.getContext('webgl'));\r\n};\r\n\r\nC.isCanvasSupported();\r\nC.isWebGLSupported();\r\n\r\n/**\r\n * Language string\r\n *\r\n * @static\r\n * @memberof H\r\n * @type {string}\r\n */\r\nC.language = C.isNodejs ? \"\" : (navigator.language || navigator['browserLanguage'] || \"\").toLowerCase();\r\n\r\nmodule.exports = C;","/*\r\n * Custom Event Manipulation Module\r\n */\r\n\r\nvar E = {};\r\n\r\nvar H = require('./uuid');\r\nvar C = require('./iterator');\r\n\r\n/**\r\n * DOM event operators.\r\n *\r\n * @static\r\n * @memberof H\r\n * @type {{addHandler: E.Event.addHandler, removeHandler: E.Event.removeHandler}}\r\n */\r\nE.Event = {\r\n    /**\r\n     * Add event handler\r\n     *\r\n     * @static\r\n     * @memberof H.Event\r\n     * @param {Element} oElement DOM element\r\n     * @param {String} sEvent event name\r\n     * @param {Function} fnHandler event handler\r\n     */\r\n    addHandler: function (oElement, sEvent, fnHandler) {\r\n        sEvent[0] = sEvent[0].toUpperCase();\r\n        oElement.addEventListener ? oElement.addEventListener(sEvent, fnHandler, false) : oElement.attachEvent(\"on\" + sEvent, fnHandler)\r\n    },\r\n    /**\r\n     * Remove event handler from dom element\r\n     *\r\n     * @static\r\n     * @memberof H.Event\r\n     * @param {Element} oElement DOM element\r\n     * @param {String} sEvent event name\r\n     * @param {Function} fnHandler event handler\r\n     */\r\n    removeHandler: function (oElement, sEvent, fnHandler) {\r\n        sEvent[0] = sEvent[0].toUpperCase();\r\n        oElement.removeEventListener ? oElement.removeEventListener(sEvent, fnHandler, false) : oElement.detachEvent(\"on\" + sEvent, fnHandler);\r\n        sEvent[0] = sEvent[0].toLowerCase();\r\n        oElement.removeEventListener ? oElement.removeEventListener(sEvent, fnHandler, false) : oElement.detachEvent(\"on\" + sEvent, fnHandler);\r\n    }\r\n};\r\n\r\n/**\r\n * EventDispatcher\r\n *\r\n * @static\r\n * @memberof H\r\n * @returns {{listeners: {}, attachListener: H.EventDispatcher.attachListener, fire: H.EventDispatcher.fire, removeListener: H.EventDispatcher.removeListener, clearListener: H.EventDispatcher.clearListener}}\r\n * @constructor\r\n */\r\nE.EventDispatcher = function() {\r\n    return {\r\n        listeners: {},\r\n        /**\r\n         * Attach an listener listening on a channel\r\n         *\r\n         * @static\r\n         * @memberof H.EventDispatcher\r\n         * @param {String} key channel to listen\r\n         * @param {Function} cb listener body\r\n         * @returns {String} UUID String, listener identifier\r\n         */\r\n        attachListener: function(key, cb) {\r\n            this.listeners[key] = this.listeners[key] || {};\r\n            //noinspection JSUnresolvedVariable\r\n            cb.uuid = cb.uuid || H.fastUuid();\r\n            //noinspection JSUnresolvedVariable\r\n            this.listeners[key][cb.uuid] = cb;\r\n            //noinspection JSUnresolvedVariable\r\n            return cb.uuid;\r\n        },\r\n        /**\r\n         * Fire event at a channel now\r\n         *\r\n         * @static\r\n         * @memberof H.EventDispatcher\r\n         * @param {String} key event channel key to fire\r\n         * @param {*} [data] optional data to append\r\n         */\r\n        fire: function(key, data) {\r\n            if (this.listeners[key]) {\r\n                C.each(this.listeners[key], function(cb) {\r\n                    //noinspection JSUnresolvedVariable\r\n                    if (cb && typeof cb === 'function' && !cb.blocked) {\r\n                        try {\r\n                            cb(data);\r\n                        }catch(e) {\r\n                            console.log(e)\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        /**\r\n         * Remove a listener from a channel.\r\n         *\r\n         * @static\r\n         * @memberof H.EventDispatcher\r\n         * @param {String} key channel name\r\n         * @param {Function} func listener body\r\n         */\r\n        removeListener: function(key, func) {\r\n            if (this.listeners[key]) {\r\n                this.listeners[key] = C.each(this.listeners[key], function(listener) {\r\n                    //noinspection JSUnresolvedVariable\r\n                    if (listener.uuid !== func.uuid) return listener;\r\n                }).merge();\r\n            }\r\n        },\r\n        /**\r\n         * Clear all listeners on a channel\r\n         *\r\n         * @static\r\n         * @memberof H.EventDispatcher\r\n         * @param {String} key channel key to clear\r\n         */\r\n        clearListener: function(key) {\r\n            this.listeners[key] = undefined;\r\n            delete this.listeners[key];\r\n        }\r\n    };\r\n};\r\n\r\nmodule.exports = E;","/*\r\n * Iterator Logic Module\r\n */\r\nvar C = require('../core');\r\n\r\nvar I = function(template) {\r\n    I.template = template || I.resultWrapper;\r\n    return I;\r\n};\r\n\r\n/**\r\n * Set the default result template.\r\n * A result template will be used to produce a result object according to the input value.\r\n *\r\n * @static\r\n * @param {Function} template\r\n * @returns {I}\r\n * @constructor\r\n */\r\nI.setTemplate = function(template) {\r\n    I.template = template || I.resultWrapper;\r\n    return I;\r\n};\r\n\r\n/*\r\n * @private\r\n *\r\n * returns a template object for the input value\r\n */\r\nI.resultWrapper = function(v) {\r\n    if (I.template !== undefined) return I.template(v);\r\n    return (v === undefined || v === null) ? {} : (C.isArrayLike(v) ? [] : {});\r\n};\r\n\r\n/**\r\n * Iterates an object or an array with an iteratee and a stack of stack trace\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Array|Object} obj\r\n * @param {Function} fn\r\n * @param {Array|String} [stackStack]\r\n * @return {Array|Object} return mapped results of the input object\r\n */\r\nI.each = function(obj, fn, stackStack) {\r\n    stackStack = stackStack || [];\r\n    var ret = I.resultWrapper(obj);\r\n    if (C.debug) {\r\n        C.each(obj, function(val, key, list) {\r\n            try {\r\n                var r = fn(val, key, list);\r\n                if (r) ret[key] = r;\r\n            } catch (e) {\r\n                //E.printStackTrace only accepts one parameter\r\n                e.printStackTrace(stackStack);\r\n            }\r\n        });\r\n    } else {\r\n        C.each(obj, function(val, key, list) {\r\n            var r = fn(val, key, list);\r\n            if (r) ret[key] = r;\r\n        });\r\n    }\r\n    return ret;\r\n};\r\n\r\n/**\r\n * Just iterate the input object\r\n * @type {function((Array|Object), Function=): (Array|Object)}\r\n */\r\nI.every = C.each;\r\n\r\n/**\r\n * Iterator function with early quit.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Array|Object} data data to iterate\r\n * @param {Function} fn function to yield result of each input\r\n * @param {Function} callable function to check if the itearting should be terminated\r\n * @param {Array} [stackStack] stack trace stack\r\n */\r\nI.until = function(data, fn, callable, stackStack) {\r\n    stackStack = stackStack || [];\r\n    var ret = I.resultWrapper(data);\r\n    if (C.debug) {\r\n        C.find(data, function(val, key, list) {\r\n            try {\r\n                var r = fn(val, key, list);\r\n                if (r) ret[key] = r;\r\n                return callable(val, key, list);\r\n            } catch (e) {\r\n                e.printStackTrace('Nested error', stackStack);\r\n            }\r\n        });\r\n    } else {\r\n        C.find(data, function(val, key, list) {\r\n            var r = fn(val, key, list);\r\n            if (r) ret[key] = r;\r\n            return callable(val, key, list);\r\n        });\r\n    }\r\n    return ret;\r\n};\r\n\r\n/**\r\n * Iterate all keys on the object. (indices on arrays)\r\n * Would prefer H.each(H.keys())\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Array|Object} data data to iterate\r\n * @param {Function} callable iteratee to yield result\r\n */\r\nI.eachKey = function(data, callable) {\r\n    var keys = data;\r\n    if (!C.isArrayLike(data)) {\r\n        keys = C.keys(data);\r\n    }\r\n    var l = keys.length;\r\n    var n = keys.length;\r\n    for (l++; --l;) {\r\n        callable(n - l, keys[n - l], data);\r\n    }\r\n};\r\n\r\n/**\r\n * Iterate on a range of numbers.\r\n *\r\n * @static\r\n * @memberof H\r\n * @return {Array|Object}\r\n * @example\r\n *\r\n * H.eachIndex(4, function() {}) => 4x undefined\r\n * H.eachIndex(1, 4, function() {}) => 3x undefined\r\n * H.eachIndex(2, 4, 2, function() {}) => 1x undefined\r\n */\r\nI.eachIndex = function() {\r\n    var length = arguments.length;\r\n    //accept 2-4 arguments only.\r\n    if (length < 2 || length > 4) {\r\n        return;\r\n    }\r\n    var start = length > 2 ? arguments[0] : 0;\r\n    var end = length === 2 ? arguments[0] : arguments[1];\r\n    var step = length >= 4 ? arguments[2] : 1;\r\n    var iteratee = arguments[length - 1];\r\n\r\n    //end, iteratee\r\n    //start, end, iteratee\r\n    //start, end, step, iteratee\r\n    var rs = I.resultWrapper([]);\r\n    var i = 0;\r\n\r\n    if (step === 1) {\r\n        //short for is faster than dowhile\r\n        var ci = start;\r\n        for (i = end - start + 1; --i;) {\r\n            rs[ci] = iteratee(ci, ci);\r\n            ci++;\r\n        }\r\n        return rs;\r\n    } else {\r\n        do {\r\n            rs[start] = iteratee(start, i++);\r\n\r\n            start += step;\r\n        } while (start <= end);\r\n        return rs;\r\n    }\r\n};\r\n\r\n/**\r\n * Iterator discarding values.\r\n *\r\n * @param {Array|Object} ele object to iterate\r\n * @param {Function} fn iteratee to produce values\r\n */\r\nI.filter = function(ele, fn) {\r\n    if (fn === undefined) {\r\n        fn = ele;\r\n        ele = this;\r\n    }\r\n    return I.each(ele, function(o) {\r\n        if (fn(o)) {\r\n            return o;\r\n        }\r\n    });\r\n};\r\n\r\nmodule.exports = I;","/*\r\n * Math-Related Module\r\n */\r\n\r\nvar Ms = {};\r\nvar C = require('../mini');\r\nvar H = require('./stacktrace');\r\n\r\n/**\r\n * Sum a list of number\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Array} list\r\n * @returns {number}\r\n */\r\nMs.sum = function(list) {\r\n    if (!C.isArrayLike(list)) return 0;\r\n    var sum = 0;\r\n    var length = list.length;\r\n    length++;\r\n    while(--length) {\r\n        sum += list[length - 1];\r\n    }\r\n    if (isNaN(sum)) {\r\n        H.printStackTrace(\"NaN!\");\r\n        return 0;\r\n    }\r\n    return sum;\r\n};\r\n\r\n/**\r\n * Hypot polyfill.\r\n *\r\n * @static\r\n * @memberof H\r\n * @type {Function}\r\n */\r\nMs.hypot = Math.hypot || function() {\r\n        return Math.sqrt(Ms.sum(C.arrayEach(arguments, function(arg) {\r\n            return arg * arg;\r\n        })));\r\n    };\r\n\r\n/**\r\n * Log2 polyfill\r\n *\r\n * @static\r\n * @memberof H\r\n * @type {Function}\r\n */\r\nMs.log2 = Math.log2 || function(number) {\r\n        return Math.log(number) / Math.log(2);\r\n    };\r\n\r\n/**\r\n * Check if a variable between given two numbers\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} v number to check\r\n * @param {Number} v0 margin 1\r\n * @param {Number} v1 margin 2\r\n * @returns {boolean}\r\n */\r\nMs.varInRange = function(v, v0, v1) {\r\n    return (v - v0) * (v - v1) < 0;\r\n};\r\n\r\n/**\r\n * Check if a point [x, y] is inside the rectangle of two given points.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Object} p point to check\r\n * @param {Object} p0 point 1\r\n * @param {Object} p1 point 2\r\n * @returns {boolean}\r\n */\r\nMs.pointInRect = function(p, p0, p1) {\r\n    var result = true;\r\n    C.arrayEach(p, function(ele, index) {\r\n        result &= Ms.varInRange(ele, p0[index], p1[index]);\r\n    });\r\n    return result;\r\n};\r\n\r\n/**\r\n * Extract max value. Object not supported\r\n *\r\n * @static\r\n * @memberof H\r\n * @param list\r\n * @returns {number}\r\n */\r\nMs.max = function(list) {\r\n    var mx = -Infinity;\r\n    C.arrayEach(list, function(v) {\r\n        if (v > mx) mx = v;\r\n    });\r\n    return mx;\r\n};\r\n\r\n/**\r\n * Extract min value. Object not supported\r\n *\r\n * @static\r\n * @memberof H\r\n * @param list\r\n * @returns {number}\r\n */\r\nMs.min = function(list) {\r\n    var mx = Infinity;\r\n    C.arrayEach(list, function(v) {\r\n        if (v < mx) mx = v;\r\n    });\r\n    return mx;\r\n};\r\n\r\n//dependes on `keys` and `values`\r\n// Ms.maxValue = function(obj) {\r\n//     return Ms.max(C.values(obj));\r\n// };\r\n//\r\n// Ms.minValue = function(obj) {\r\n//     return Ms.min(C.values(obj));\r\n// };\r\n\r\n/*\r\n * Individual Functions\r\n */\r\n\r\n/**\r\n * Degree to radian\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} degree degree value\r\n * @returns {number} radian value\r\n */\r\nMs.degToRad = function(degree) {\r\n    return (degree / 180.0) * Math.PI;\r\n};\r\n\r\n/**\r\n * Radian to degree\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} rad radian value\r\n * @returns {number} degree value\r\n */\r\nMs.radToDeg = function(rad) {\r\n    return rad * 180.0 / Math.PI;\r\n};\r\n\r\n/**\r\n * Normalize degree value to [0, 360)\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} degree degree value\r\n * @returns {number} normalized degree value\r\n */\r\nMs.standardizeDegree = function(degree) {\r\n    var floor = Math.floor(degree / 360.0);\r\n    return degree - floor * 360.0;\r\n};\r\n\r\n/**\r\n * Normalize radian value to [0, 2*PI)\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} rad radian value\r\n * @returns {number} normalized radian value\r\n */\r\nMs.standardizeRad = function(rad) {\r\n    var floor = Math.floor(rad / (2 * Math.PI));\r\n    return rad - floor * 2 * Math.PI;\r\n};\r\n\r\n/**\r\n * Convert point in rectangle coordinates to polar coordinates. (in radian)\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Array} coor rect coordinates\r\n * @returns {*[]} polar coordinates\r\n */\r\nMs.rectToPolar = function(coor) {\r\n    var r = Ms.hypot(coor[0], coor[1]);\r\n    var absTheta = Math.atan2(Math.abs(coor[1]), Math.abs(coor[0])); // in rad\r\n    var signal = coor[0] * coor[1] < 0;\r\n    if (coor[0] >= 0) {\r\n        if (coor[1] >= 0) {\r\n            return [r, absTheta];\r\n        } else {\r\n            return [r, 2 * Math.PI - absTheta];\r\n        }\r\n    } else {\r\n        return [r, Math.PI + (signal ? -1 : 1) * absTheta];\r\n    }\r\n};\r\n\r\n/**\r\n * Convert point in polar coordinates to rectangle coordinates.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Array} coor polar coordinates\r\n * @returns {*[]} rectangle coordinates\r\n */\r\nMs.polarToRect = function(coor) {\r\n    var cA = Math.cos(coor[1]);\r\n    var sA = Math.sin(coor[1]);\r\n    return [coor[0] * cA, coor[0] * sA];\r\n};\r\n\r\n/**\r\n * Convert distance in latitude to meter\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} delta distance represented in latitude\r\n * @returns {number} distance in meter\r\n */\r\nMs.latToMeter = function(delta) {//in meters\r\n    return 40008000 * delta / 360.0;\r\n};\r\n\r\n/**\r\n * Convert distance in longtitude around some latitude to meter\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} lat latitude\r\n * @param {Number} delta distance in longtitude\r\n * @returns {number} distance in meter\r\n */\r\nMs.lngToMeterAtLat = function(lat, delta) {\r\n    return delta * Math.cos(Math.PI * Math.abs(lat) / 180) * 40075040 / 360.0;\r\n};\r\n\r\n/**\r\n * Convert distance in meter to distance in latitude\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} meter distance in meter\r\n * @returns {number} distance in latitude\r\n */\r\nMs.meterToLat = function(meter) {\r\n    return 360.0 * meter / 40008000;\r\n};\r\n\r\n/**\r\n * Convert distance in meter to distance in longtitude around some latitude\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} lat latitude\r\n * @param {Number} meter distance in meter\r\n * @returns {number} distance in longtitude\r\n */\r\nMs.meterToLngAtLat = function(lat, meter) {\r\n    return 360.0 * meter / (40075040 * Math.cos(Math.PI * Math.abs(lat) / 180));\r\n};\r\n\r\n/**\r\n * Calculate the distance between two points on earth.\r\n * Points are represented in 2-element arrays ([longtitude, latitude])\r\n * Assuming the earth a perfect sphere.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Array} p0 point 1\r\n * @param {Array} p1 point 2\r\n * @returns {number} distance in meters\r\n */\r\nMs.distOnEarth = function(p0, p1) {\r\n    //[lng, lat], assuming earth a sphere\r\n    return Math.PI * 6400000 * Math.acos(Math.cos(p0[0] - p1[0]) + Math.cos(p0[1] - p1[1]) - 1) / 180.0;\r\n};\r\n\r\nmodule.exports = Ms;","/*\r\n * Object-Related Module\r\n */\r\n\r\nvar O = {};\r\nrequire('./stacktrace');\r\n\r\n//variable type to be checked\r\n/**\r\n * Checks if the target string contains a charsequence.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {String} str target string\r\n * @param {String} sub substring to check\r\n * @returns {boolean}\r\n */\r\nO.strContains = function(str, sub) {\r\n    return str.indexOf(sub) !== -1;\r\n};\r\n\r\n/**\r\n * Checks if the target string contains a charsequence ignoring the char case.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {String} str target string\r\n * @param {String} sub substring to check\r\n * @returns {boolean}\r\n */\r\nO.strContainsIgnoreCase = function(str, sub) {\r\n    return str.toLowerCase().indexOf(sub.toLowerCase()) !== -1;\r\n};\r\n\r\nO.parseJson = function(json) {\r\n    try {\r\n        return JSON.parse(decodeURI(json));\r\n    } catch (e) {\r\n        try {\r\n            return JSON.parse(json);\r\n        } catch (e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Clones the object via JSON.\r\n * Should be used on small plain javascript objects only.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Array|Object} obj\r\n * @return {Object} cloned object\r\n */\r\nO.cloneByParse = function(obj) {\r\n    //for small objects only\r\n    return JSON.parse(JSON.stringify(obj));\r\n};\r\n\r\nmodule.exports = O;","var root = require('./detect').root;\r\n\r\nroot.requestAnimationFrame = (function() {\r\n    return root.webkitRequestAnimationFrame ||\r\n        root.requestAnimationFrame ||\r\n        root.mozRequestAnimationFrame ||\r\n        root.oRequestAnimationFrame ||\r\n        root.msRequestAnimationFrame ||\r\n        function(callback/*, element*/){\r\n            return root.setTimeout(callback, 1000 / 60);\r\n        };\r\n})();","var S = {};\r\n\r\nvar D = require('./detect');\r\nvar root = D.root;\r\n\r\nvar noop = function() {\r\n    return function() {};\r\n};\r\n\r\nvar navigator = D.root.navigator || {userAgent: \"\"};\r\n\r\n/**\r\n * Add property to object\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Object} object to operate\r\n * @param {String} key field to fill in\r\n * @param {Object} descriptor property descriptor\r\n */\r\nvar addProperty = noop();\r\n//defineProperty in IE8 only accepts DOM elements as parameters, while in Safari 5 it's opposite\r\nif (!Object.defineProperty || (0 < D.getIE() <= 8 && navigator.userAgent.indexOf('MSIE') !== -1)) {\r\n    addProperty = function(instance, k, descriptor) {\r\n        instance[k] = descriptor.value;\r\n\r\n        if (isObject(descriptor[k])) {\r\n            instance[k].ienumerable = !descriptor.enumerable;\r\n        } else {\r\n            if (!instance[k].ienumerables) {\r\n                instance[k].ienumerables = [];\r\n            }\r\n            if (!descriptor.enumerable && instance[k].ienumerables instanceof Array) {\r\n                instance[k].ienumerables.push(k);\r\n            } else if (instance['ienumerables']) {\r\n                instance['ienumerables'][k] = undefined;\r\n                delete instance['ienumerables'][k];\r\n            }\r\n        }\r\n\r\n        //configurable, writable to be impl.\r\n    };\r\n\r\n    addProperty.__userDefined__ = true;\r\n\r\n    if (!Object.defineProperty) Object.defineProperty = addProperty;\r\n} else {\r\n    addProperty = Object.defineProperty;\r\n}\r\n\r\n/**\r\n * Create object and copy all properties into it.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Object} base base class\r\n * @param {Object} reference object to copy properties from\r\n * @example\r\n *\r\n * var obj = H.createObject(Object.prototype, {a: 1, b: 2})\r\n */\r\nvar createObject = function() {\r\n    function F() {}\r\n\r\n    return function(o, p) {\r\n        F.prototype = o;\r\n        var instance = new F();\r\n        if (p) {\r\n            //p is a descriptor with key name k\r\n            //is this enough for replacing H.each(H.keys ?\r\n            for (var k in p) {\r\n                if (p.hasOwnProperty(k)) addProperty(instance, k, p[k]);\r\n            }\r\n        }\r\n        return instance;\r\n    };\r\n}();\r\n\r\n//emulate legacy getter/setter API using ES5 APIs\r\ntry {\r\n    if (!Object.prototype.__defineGetter__ &&\r\n        addProperty({},\"x\",{get: function(){return true;}}).x) {\r\n        addProperty(Object.prototype, \"__defineGetter__\",\r\n            {enumerable: false, configurable: true,\r\n                value: function(name,func)\r\n                {addProperty(this,name,\r\n                    {get:func,enumerable: true,configurable: true});\r\n                }});\r\n        addProperty(Object.prototype, \"__defineSetter__\",\r\n            {enumerable: false, configurable: true,\r\n                value: function(name,func)\r\n                {addProperty(this,name,\r\n                    {set:func,enumerable: true,configurable: true});\r\n                }});\r\n    }\r\n} catch(defPropException) {/*Do nothing if an exception occurs*/}\r\n\r\n// Avoid `console` errors in browsers that lack a console.\r\n(function() {\r\n    var method;\r\n    var noop = function () {};\r\n    var methods = [\r\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\r\n        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\r\n        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\r\n        'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'\r\n    ];\r\n    var length = methods.length;\r\n    var console = root.console || {};\r\n    if (!root.console) root.console = console;\r\n\r\n    while (length--) {\r\n        method = methods[length];\r\n\r\n        // Only stub undefined methods.\r\n        if (!console[method]) {\r\n            console[method] = noop;\r\n        }\r\n    }\r\n}());\r\n\r\nS.addProperty = addProperty;\r\nS.createObject = createObject;\r\n\r\nmodule.exports = S;","var C = {};\r\n\r\nvar Mini = require('../mini');\r\n\r\nvar log = (console.error || console.log);\r\n\r\n/**\r\n * Generate stack trace string. (separated by `\\n`)\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {String} [title]\r\n * @returns {string} stack trace string\r\n */\r\nC.getStackTrace = function(title) {\r\n    var callstack = \"Referenced From: \" + (title || \"\");\r\n    var e = title instanceof Error ? title : new Error(callstack);\r\n    var split = e.stack.split('\\n');\r\n    if (split.length > 1) {\r\n        var t = split[0];\r\n        //remove getStackTrace itself\r\n        split.shift();\r\n        split.shift();\r\n        split.unshift(t);\r\n        return split.join('\\n');\r\n    }\r\n    return e.stack;\r\n};\r\n\r\nvar DefaultNestedTitle = \"Nested error:\";\r\nvar DefaultTitle = \"Error:\";\r\n\r\n/**\r\n * Print stack trace stack.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {String|Error} [title] title or error of current layer\r\n * @param {Array} [stackStack] stack trace stack (possibly)\r\n * @example\r\n *\r\n * usage:\r\n * H.printStackTrace(string/error, stackStack)\r\n * H.printStackTrace(string/error)\r\n * H.printStackTrace(stackStack)\r\n * H.printStackTrace()\r\n * variant:\r\n * error.printStackTrace() -> printStackTrace(error, [])\r\n */\r\nC.printStackTrace = function(title, stackStack) {\r\n    stackStack = stackStack || [];\r\n    if (Mini.isArrayLike(title)) {\r\n        //noinspection JSValidateTypes for arguments\r\n        stackStack = title;\r\n        if (stackStack.length) {\r\n            title = DefaultNestedTitle;\r\n        } else {\r\n            title = DefaultTitle;\r\n        }\r\n    }\r\n    title = title || DefaultTitle;\r\n    stackStack.unshift(C.getStackTrace(title));\r\n    var n = stackStack.length;\r\n    var l = stackStack.length;\r\n    for (l++; --l;) {\r\n        log(stackStack[n - l]);\r\n    }\r\n};\r\n\r\n/**\r\n * Print string with stack trace in debug mode.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {String|Error} [d] content to print\r\n * @param {Array} [stackTrace] stack trace stack\r\n */\r\nC.errlog = function(d, stackTrace) {\r\n    if (C.debug) {\r\n        C.printStackTrace(d);\r\n        if (stackTrace && !C.isArrayLike(stackTrace)) {\r\n            console.error(\"Referenced From: \" + stackTrace);\r\n        } else if (stackTrace && C.isArrayLike(stackTrace)) {\r\n            for (var i = stackTrace.length - 1; i > -1; i--) {\r\n                if (stackTrace[i]) console.error(\"Referenced From: \" + stackTrace[i]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction printStackTrace(stackStack) {\r\n    C.printStackTrace(this, stackStack);\r\n}\r\n\r\nError.prototype.getStackTrace = C.getStackTrace;\r\nError.prototype.printStackTrace = printStackTrace;\r\n\r\nmodule.exports = C;","var C = {};\r\nvar H = require('./stacktrace');\r\nvar Detect = require('./detect');\r\n\r\nif (Detect.isNodejs) {\r\n    Detect.root.__sessionStorage = {};\r\n\r\n    C.setItem = setItemFallback;\r\n    C.getItem = getItemFallback;\r\n    C.removeItem = removeItemFallback;\r\n} else if (Detect.root.sessionStorage) try {\r\n    sessionStorage.setItem('test', '1');\r\n    sessionStorage.removeItem('test');\r\n\r\n    /**\r\n     * Store value to session storage.\r\n     * In node.js environment, data will be stored in global variable `__sessionStorage` (lost on exit).\r\n     * In browsers without sessionStorage support, will try cookie first.\r\n     *\r\n     * @static\r\n     * @memberof H\r\n     * @param key\r\n     * @param value\r\n     */\r\n    C.setItem = function(key, value) {\r\n        sessionStorage.removeItem(key);\r\n        sessionStorage.setItem(key, value);\r\n    };\r\n\r\n    /**\r\n     * Deprecated store value to session storage.\r\n     *\r\n     * @static\r\n     * @memberof H\r\n     * @deprecated\r\n     * @param key\r\n     * @param value\r\n     * @type {Function}\r\n     */\r\n    C.secAddItem = C.setItem;\r\n\r\n    /**\r\n     * Remove stored value of key in session storage.\r\n     *\r\n     * @static\r\n     * @memberof H\r\n     * @param key\r\n     */\r\n    C.removeItem = function(key) {\r\n        sessionStorage.removeItem(key);\r\n    };\r\n\r\n    /**\r\n     * Retrieve stored value in session storage.\r\n     *\r\n     * @static\r\n     * @memberof H\r\n     * @param key\r\n     */\r\n    C.getItem = function(key) {\r\n        return sessionStorage.getItem(key);\r\n    };\r\n\r\n} catch (e) {\r\n    H.printStackTrace('Session Storage Not Supported');\r\n\r\n    C.secAddItem = function(key, value) {\r\n        setCookie(key, value, 1);\r\n    };\r\n\r\n    C.removeItem = function(key) {\r\n        setCookie(key, null, 0);\r\n    };\r\n\r\n    C.getItem = function(key) {\r\n        return getCookie(key);\r\n    };\r\n}\r\n\r\nfunction setCookie(key, value, days) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + days * 86400000);\r\n    document.cookie = key + \"=\" + value + \"; expires=\" + date.toUTCString();\r\n}\r\n\r\nfunction getCookie(key) {\r\n    var regex = new RegExp('^\\\\s*' + key + '=');\r\n    var splits = document.cookie.split(';');\r\n    for (var i = 0; i < splits.length; i++) {\r\n        var s = splits[i];\r\n        var d = s.match(regex);\r\n        if (d !== null && d.length !== 0) {\r\n            return s.replace(regex, '');\r\n        }\r\n    }\r\n}\r\n\r\nfunction setItemFallback(key, value) {\r\n    Detect.root.__sessionStorage[key] = value;\r\n}\r\n\r\nfunction getItemFallback(key) {\r\n    return Detect.root.__sessionStorage[key];\r\n}\r\n\r\nfunction removeItemFallback(key) {\r\n    Detect.root.__sessionStorage[key] = undefined;\r\n}\r\n\r\nmodule.exports = C;","var C = {};\r\n\r\nC.now = Date.now;\r\n\r\n/**\r\n * Run a function, count the time consumed.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Function} cb function to run\r\n * @returns {number} time in millis\r\n */\r\nC.test = function(cb) {\r\n    var o = C.now();\r\n    cb();\r\n    var d = C.now() - o;\r\n    console.log(d);\r\n    return d;\r\n};\r\n\r\n/**\r\n * Run a function, and record it in \"Profile\" tab in chromium.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Function} cb function to run\r\n * @param {String} title title of this run\r\n * @returns {number} time in millis\r\n */\r\nC.profile = function(cb, title) {\r\n    console.profile(title || \"Profile\");\r\n    var o = C.now();\r\n    cb();\r\n    var d = C.now() - o;\r\n    //noinspection JSUnresolvedFunction\r\n    console.profileEnd(title || \"Profile\");\r\n    return d;\r\n};\r\n\r\n/**\r\n * Do something for some times\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Function} cb function to run\r\n * @param {Number} times times function will be executed\r\n */\r\nC.repeat = function(cb, times) {\r\n    if (times > 0) {\r\n        do {\r\n            cb();\r\n        } while(times--);\r\n    }\r\n};\r\n\r\n/**\r\n * Test some method and record the time consumption for several times.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Function} cb function to run\r\n * @param {Number} times times function will be executed\r\n */\r\nC.testTimes = function(cb, times) {\r\n    C.test(function() {\r\n        C.repeat(cb, times);\r\n    });\r\n};\r\n\r\n/**\r\n * Profile some method for several times.\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Function} cb function to run\r\n * @param {Number} times times function will be executed\r\n * @param {String} title title of this run\r\n */\r\nC.profileTimes = function(cb, times, title) {\r\n    C.profile(function() {\r\n        C.repeat(cb, times);\r\n    }, title);\r\n};\r\n\r\nmodule.exports = C;","var C = {};\r\n\r\nvar I = require('./iterator');\r\nvar D = require('./detect');\r\n\r\nvar location = D.root.location || \"\";\r\n\r\nC.QueryString = function(item){\r\n    var svalue = location.search.match(new RegExp(\"[\\?\\&]\" + item + \"=([^\\&]*)(\\&?)\",\"i\"));\r\n    return svalue ? svalue[1] : svalue;\r\n};\r\n\r\n/**\r\n * @static\r\n * @memberof H\r\n * @deprecated\r\n */\r\nC.Request = {\r\n    QueryString: C.QueryString\r\n};\r\n\r\n/**\r\n * Generate URL with GET param string\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {String} server prefix string (domain)\r\n * @param {String} action path of file requests\r\n * @param {Object} params get param object\r\n * @returns {string} URL string\r\n * @example\r\n *\r\n * H.getUrlByParams(\"http://abc.def/\", \"path/of/file\", {a: 1})\r\n * =>\r\n * \"http://abc.def/path/of/file?a=1\"\r\n */\r\nC.getUrlByParams =  function(server, action, params) {\r\n    var paramUrl = \"\";\r\n    I.each(params || {}, function(param, key) {\r\n        paramUrl += \"&\" + key + \"=\";\r\n        var p = \"\";\r\n        if (param instanceof Array) {\r\n            p = \"[\";\r\n            var tr = \"\";\r\n            I.each(param, function(val) {\r\n                tr += \",\";\r\n                if (val instanceof Boolean ||\r\n                    val instanceof String ||\r\n                    val instanceof Number ||\r\n                    typeof val === \"string\" ||\r\n                    typeof val === \"number\") {\r\n                    tr += \"\\\"\" + val + \"\\\"\";\r\n                } else if (val) {\r\n                    tr += val;\r\n                }\r\n            });\r\n            p += tr.substr(1) + \"]\";\r\n        } else {\r\n            p = param;\r\n        }\r\n        paramUrl += p;\r\n    });\r\n    return (server + action + \"?\" + paramUrl.substr(1));\r\n};\r\n\r\n/**\r\n * Generate simple param string from an object\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Object} data param object\r\n * @returns {string}\r\n * @example\r\n *\r\n * H.param({a:1, b:2})\r\n * =>\r\n * \"a=1&b=2\"\r\n */\r\nC.param = function(data) {\r\n    var s = [], add = function(k, v) {\r\n        s[s.length] = encodeURIComponent(k) + \"=\" + encodeURIComponent(v);\r\n    };\r\n\r\n    I.each(data, function(o, k) {\r\n        add(k, o);\r\n    });\r\n\r\n    return s.join(\"&\").replace(/%20/g, \"+\");\r\n};\r\n\r\nmodule.exports = C;","var C = {};\r\n\r\n/**\r\n * Generate Uuid\r\n *\r\n * @static\r\n * @memberof H\r\n * @param {Number} [len] length of target string, not specified by default\r\n * @param {Number} [radix] when length specified, limit possible characters in the result\r\n * @returns {string}\r\n */\r\nC.uuid = function (len, radix) {\r\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n    var uuid = [], i;\r\n    radix = radix || chars.length;\r\n\r\n    if (len) {\r\n        // Compact form\r\n        for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random()*radix];\r\n    } else {\r\n        // rfc4122, version 4 form\r\n        var r;\r\n        // rfc4122 requires these characters\r\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\r\n        uuid[14] = '4';\r\n        // Fill in random data.  At i==19 set the high bits of clock sequence as\r\n        // per rfc4122, sec. 4.1.5\r\n        for (i = 0; i < 36; i++) {\r\n            if (!uuid[i]) {\r\n                r = 0 | Math.random()*16;\r\n                uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n            }\r\n        }\r\n    }\r\n    return uuid.join('');\r\n};\r\n\r\n/**\r\n * Generate Uuid in Default Format\r\n *\r\n * @static\r\n * @memberof H\r\n * @returns {string}\r\n */\r\nC.fastUuid = function() {\r\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n    var uuid = new Array(36), rnd=0, r;\r\n    for (var i = 0; i < 36; i++) {\r\n        if (i === 8 || i === 13 || i === 18 || i === 23) {\r\n            uuid[i] = '-';\r\n        } else if (i === 14) {\r\n            uuid[i] = '4';\r\n        } else {\r\n            if (rnd <= 0x02) rnd = 0x2000000 + (Math.random()*0x1000000)|0;\r\n            r = rnd & 0xf;\r\n            rnd = rnd >> 4;\r\n            uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\r\n        }\r\n    }\r\n    return uuid.join('');\r\n};\r\n\r\nmodule.exports = C;"],"sourceRoot":"/source/"}